import { ApolloServer } from "@apollo/server";
import { startStandaloneServer } from "@apollo/server/standalone";

//  –≠–Ω—ç —Ö—ç—Å—ç–≥ –Ω—å GraphQL —Å—Ö–µ–º –±—É—é—É —Ö—ç—Ä—ç–≥–ª—ç–≥—á —è–º–∞—Ä —Ç”©—Ä–ª–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª –∞—Å—É—É–∂ –±–æ–ª–æ—Ö—ã–≥ —Ç–æ–¥–æ—Ä—Ö–æ–π–ª–∂ –±–∞–π–Ω–∞.
const typeDefs = `
  type Query {
    hello: String
    ognoo: String
  }
`;

// –≠–Ω—ç –±–æ–ª resolvers –±—É—é—É —Ö—ç—Ä—ç–≥–ª—ç–≥—á hello, ognoo query –∞—Å—É—É—Ö–∞–¥ —è–≥ —è–º–∞—Ä ”©–≥”©–≥–¥”©–ª –±—É—Ü–∞–∞—Ö—ã–≥ –∑–∞–∞–¥–∞–≥ —Ñ—É–Ω–∫—Ü—É—É–¥.
const resolvers = {
  Query: {
    hello: () => "Hello world",
    ognoo: () => new Date().toLocaleString(),
  },
};

// typeDefs, resolvers-–æ–æ Apollo Server-–¥ ”©–≥—á –±–∞–π–Ω–∞.
const server = new ApolloServer({
  typeDefs,
  resolvers,
});

// –°–µ—Ä–≤–µ—Ä–∏–π–≥ –∞–∂–∏–ª–ª—É—É–ª–∞—Ö
const { url } = await startStandaloneServer(server, {
  listen: { port: 4000 },
});

// –ö–æ–Ω—Å–æ–ª–¥ —Ö—ç–≤–ª—ç—Ö
console.log(`üöÄ Server ready at ${url}`);
